[tool.poetry]
name = "django-bootstrap-project"
version = "0.0.1"
description = "An boilerplate / bootstrap installation of a Django project"
authors = ["Martijn Jacobs <maerteijn@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/maerteijn/django-bootstrap-project"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3.9"
]
packages = [
    { include = "django_bootstrap_project", from = "src" },
]

[tool.poetry.dependencies]
python = "^3.9"
Django = "3.2"
psycopg2-binary = "~2.9"
django-environ = "^0.4.5"
whitenoise = "^5.2.0"
uWSGI = "^2.0.19"
django-bootstrap-app = { git = "https://github.com/maerteijn/django-bootstrap-app.git", tag = "v0.0.2" }

[tool.poetry.dev-dependencies]
flake8 = "~3.8"
flake8-black = "^0.2.1"
flake8-isort =  "4.0"
pylint = "~2.8"
black = "-20.8b1"
pytest = "~^6.2"
pytest-django = "~4.4"
pytest-cov = "~2.11"
pytest-env = "^0.6.2"
poetry-dynamic-versioning = "^0.13.0"

[tool.poetry.scripts]
"manage.py" =  "django_bootstrap_project.manage:main"

[tool.poetry-dynamic-versioning]
enable = true
metadata = true
tagged-metadata = true
latest-tag = true

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
exclude = "/migrations/"

[tool.pylint.messages_control]
disable = "C,WW5103"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.master]
init-hook = "import sys; sys.path.append('.')"
ignore = "migrations"

[tool.isort]
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "django_bootstrap_project.settings"
django_debug_mode = true
testpaths = "tests/"
addopts = "--reuse-db --cov=django_bootstrap_project"
env = [
    "SECRET_KEY=a"
]

[tool.coverage.run]
omit = ["**/migrations/**", "**/tests/**", "**/manage.py", "**/settings/**", "**/wsgi.py", "**/asgi.py"]

[tool.coverage.report]
show_missing = true
